.row
  .span8
    h3 style="margin:-5px 0" Recent Tweets from College Station
    h5 style="margin-top:-5px" 2 mi radius
  .span4
    <form class="form-search" style="float:right">
      <input id="query" type="text" class="input-medium search-query" name="query" placeholder= "Search Term">
      <button id="searchBtn" type="button" class="btn">Search</button>
    </form>
.row
  .span12
    <div id="map_canvas"></div>

- content_for :head do
  <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
  <meta charset="utf-8">
  <style> html, body, #map_canvas {margin: 0; padding: 0; height: 100%; }</style>
  <script src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false"></script>
  javascript:
    var map;
    var markers=[];
    infowindow = new google.maps.InfoWindow();
    function initialize() {
      var mapOptions = {
       zoom: 14,
       center: new google.maps.LatLng(30.6279, -96.3350),
       mapTypeId: google.maps.MapTypeId.ROADMAP
      }
      map = new google.maps.Map(document.getElementById('map_canvas'),
         mapOptions);

      $('#searchBtn').click(updateTweets);
      updateTweets();
      setInterval(updateTweets,30000);
    }

    function updateTweets() {
      data = {
        'query': $('#query')[0].value
      }
      $.getJSON("/tweets.json", data, function(tweets) {
        clearOverlays();
        for(var i=0; i<tweets.length; i++) {
          if (!tweets[i].geo) continue;

          var coord = tweets[i].geo.coordinates;
          var content =
            '<img border="0" align="Left" src='+tweets[i]['user']['profile_image_url']+'>' +
            tweets[i].user.screen_name +
            " (" +
            tweets[i].user.name +
            "): " +
            tweets[i].text;

          var thisMarker = new google.maps.Marker({
           position: new google.maps.LatLng(coord[0], coord[1]),
           map: map,
           animation: google.maps.Animation.DROP
          });

          google.maps.event.addListener(thisMarker, 'click', createMarkerListener(thisMarker, content));
          markers.push(thisMarker);
        }
      });
    }

    function createMarkerListener(marker, content) {
      return function(){
        infowindow.setContent(content)
        infowindow.open(map, marker);
      }
    }

    function clearOverlays() {
      for (var i = 0; i < markers.length; i++ ) {
        markers[i].setMap(null);
      }
      markers = [];
    }

    google.maps.event.addDomListener(window, 'load', initialize);
