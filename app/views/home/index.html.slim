.row
  form class="form-search" id="search-form" style="float:right"
    .span7
      h3 style="margin:-5px 0" Recent Tweets from
      input id="location" type="text" class="input-medium" value="College Station, TX"
    .span5
      <input id="query" type="text" class="input-medium search-query" name="query" placeholder= "Search Term">
      <select name= "radius" input id= "radius">
      <option value= "2mi">2 Miles</option>
      <option value= "4mi">4 Miles</option>
      <option value= "6mi">6 Miles</option>
      <option value= "8mi">8 Miles</option>
      <option value= "10mi">10 Miles</option>
      <option value= "100mi">100 Miles</option>
      </select>
      <button id="searchBtn" type="submit" class="btn"> Search</button>

.row
  .span12
    <div id="map_canvas"></div>

- content_for :head do
  <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
  <meta charset="utf-8">
  <style> #map_canvas { height: 80%; }</style>
  <script src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false"></script>
  javascript:
    var map;
    var markers=[];
    var center;
    infowindow = new google.maps.InfoWindow();
    function initialize() {
      var mapOptions = {
       zoom: 14,
       center: new google.maps.LatLng(30.6279, -96.3350),
       mapTypeId: google.maps.MapTypeId.ROADMAP
      }
      map = new google.maps.Map(document.getElementById('map_canvas'),
         mapOptions);

      $('#search-form').submit(newSearch);
      updateTweets();
      setInterval(updateTweets,30000);
    }

    function newSearch() {
      updateTweets(function() {
        map.setCenter(new google.maps.LatLng(center[0], center[1]));
      });
      return false;
    }

    function updateTweets(callback) {
      callback = typeof callback !== 'undefined' ? callback : function() {};

      data = {
        'location': $('#location')[0].value,
        'query': $('#query')[0].value,
        'radius' : $('#radius')[0].value
      }
      $.getJSON("/tweets.json", data, function(results) {
        clearOverlays();

        tweets = results['tweets'];
        center = results['center'];
        for(var i=0; i<tweets.length; i++) {
          if (!tweets[i].geo) continue;

          var coord = tweets[i].geo.coordinates;
          var content =
            '<img border="0" align="Left" src='+tweets[i]['user']['profile_image_url']+'>' +
            tweets[i].user.screen_name +
            " (" +
            tweets[i].user.name +
            "): " +
            tweets[i].text;

          var thisMarker = new google.maps.Marker({
           position: new google.maps.LatLng(coord[0], coord[1]),
           map: map,
           animation: google.maps.Animation.DROP
          });

          google.maps.event.addListener(thisMarker, 'click', createMarkerListener(thisMarker, content));
          markers.push(thisMarker);
        }

        callback();
      });
    }

    function createMarkerListener(marker, content) {
      return function(){
        infowindow.setContent(content)
        infowindow.open(map, marker);
      }
    }

    function clearOverlays() {
      for (var i = 0; i < markers.length; i++ ) {
        markers[i].setMap(null);
      }
      markers = [];
    }

    google.maps.event.addDomListener(window, 'load', initialize);
